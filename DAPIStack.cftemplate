{
    "AWSTemplateFormatVersion" : "2010-09-09",

    "Description" : "MongoDB Replica Set Stack 20140521-01",

    "Parameters" : {
        "KeyName" : {
            "Description" :"Name of an existing EC2 KeyPair to enable SSH access",
            "Type" : "String"
        },

        "ClusterName" : {
            "Description" :"Name of this DAPI Cluster (Prefix for all node names)",
            "Type" : "String",
            "Default": ""
        },

        "ReplicaSetName" : {
            "Description" : "Name for the MongoDB Replica Set",
            "Type" : "String",
            "Default" : "ReplicaSet1"
        },

        "FrontEndIpAddress" : {
            "Description" : "IP allowed access DAPI-MessageService ports (in CIDR format, e.g.: 126.23.2.1/24)",
            "Type" :"String",
            "MinLength":"9",
            "MaxLength":"18",
            "AllowedPattern":"^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})/(\\d{1,2})$",
            "ConstraintDescription":"Must be a valid IP in CIDR notation .",
            "Default" :"0.0.0.0/0"
        },

        "SshIpAddress" : {
            "Description" : "IP accessing SSH (in CIDR format, e.g.: 126.23.2.1/24)",
            "Type" :"String",
            "MinLength":"9",
            "MaxLength":"18",
            "AllowedPattern":"^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})/(\\d{1,2})$",
            "ConstraintDescription":"Must be a valid IP in CIDR notation .",
            "Default" :"0.0.0.0/0"
        },
        
        "VpcId" : {
            "Description" : "Network VPC Id (vpc-3c035757)",
            "Type" : "String",
            "Default" : "vpc-3c035757"
        },

        "NodeInstanceType" : {
            "Type" : "String",
            "Description" : "EC2 instance type (e.g. m3.large, m3.xlarge, m3.xlarge)",
            "Default" : "m3.medium",
            "AllowedValues" : [ "m3.medium", "m3.large", "m3.xlarge", "m3.xlarge", "m3.2xlarge", "m3.4xlarge", "c1.xlarge", "cc1.4xlarge" ]
        },

        "MongoInstanceType" : {
            "Type" : "String",
            "Description" : "EC2 instance type (e.g. m3.large, m3.xlarge, m3.xlarge)",
            "Default" : "m3.xlarge",
            "AllowedValues" : [ "m3.large", "m3.xlarge", "m3.xlarge", "m3.2xlarge", "m3.4xlarge", "c1.xlarge", "cc1.4xlarge" ]
        },

        "VolumeSize" : {
            "Description" : "Volume size for each Mongo EBS volume",
            "Type" : "Number",
            "MinValue" : "1",
            "MaxValue" : "1000",
            "Default" : "10"
        },

        "VolumeType" : {
            "Description" : "EBS Volume type (Standard or Provisioned)",
            "AllowedValues": ["Standard","Provisioned"],
            "Type" : "String",
            "Default" : "Provisioned"
        },

        "IopsPerVolume" : {
            "Description" : "Provisioned IOps Per Volume EBS volume (100-2000) (ignored for standard volumes)",
            "Type" : "Number",
            "MinValue" : "100",
            "MaxValue" : "2000",
            "Default" : "200"
        },

        "VpcId" : {
            "Description" : "Network VPC Id (vpc-3c035757)",
            "Type" : "String",
            "Default" : "vpc-3c035757"
        },

        "NodeJSVersion" : {
            "Description" : "NodeJS Version",
            "Type" : "String",
            "Default" : "0.10.28"
        },

        "DAPIUser" : {
            "Description" : "User under which to install DAPI-MessageService",
            "Type" : "String",
            "Default" : "ec2-user"
        },

        "GitHubSshPublicKey" : {
            "Description" : "Public Key to access JHT Github",
            "Type" : "String"
        },

        "GitHubSshPrivateKey" : {
            "Description" : "Private Key to access JHT Github",
            "Type" : "String"
        },

        "DAPITemplates" : {
            "Description" : "S3 Bucket containing the DAPI CloudFormation Templates",
            "Type" : "String",
            "Default" : "dapi-template"
        },

        "S3BucketName" : {
            "Description" : "Primary Mongo Host name",
            "Type" : "String",
            "Default" : "dapi-workoutsnapshots"
        },

        "MongoDbName" : {
            "Description" : "Mongo Database Name",
            "Type" : "String",
            "Default" : "dapi"
        },

        "SnapshotCollection" : {
            "Description" : "Mongo Workout Snapshot Collection Name",
            "Type" : "String",
            "Default" : "workout_snapshots"
        },

        "BinaryMessageCollection" : {
            "Description" : "Mongo Binary Message Collection Name",
            "Type" : "String",
            "Default" : "dapi_raw"
        }

    },

    "Mappings" : {
        "VolumeTypeKeys" : {
            "Standard":     { "Key": "standard"},
            "Provisioned":  { "Key": "io1"}
        },
        "InstanceTypeArch" : {
            "m1.medium"   : { "Arch" : "64" },
            "m1.large"    : { "Arch" : "64" },
            "m1.xlarge"   : { "Arch" : "64" },
            "m2.xlarge"   : { "Arch" : "64" },
            "m2.2xlarge"  : { "Arch" : "64" },
            "m2.4xlarge"  : { "Arch" : "64" },
            "c1.medium"   : { "Arch" : "64" },
            "c1.xlarge"   : { "Arch" : "64" },
            "cc1.4xlarge" : { "Arch" : "64HVM" }
        },

        "RegionImageZone" : {
            "us-east-1"     : { "64" : "ami-fb8e9292", "64HVM" : "ami-978d91fe" },
            "us-west-2"     : { "64" : "ami-043a5034", "64HVM" : "ami-383a5008" },
            "us-west-1"     : { "64" : "ami-7aba833f", "64HVM" : "ami-5aba831f" },
            "eu-west-1"     : { "64" : "ami-2918e35e", "64HVM" : "ami-4b18e33c" },
            "ap-southeast-1": { "64" : "ami-b40d5ee6", "64HVM" : "ami-860d5ed4" },
            "ap-southeast-2": { "64" : "ami-c9562fc8", "64HVM" : "ami-bb562fba" },
            "ap-northeast-1": { "64" : "ami-3b4bd301", "64HVM" : "ami-cf4ad2f5" },
            "sa-east-1"     : { "64" : "ami-215dff3c", "64HVM" : "ami-635dff7e" }
        },

        "RegionZone" : {
            "us-east-1"     : {"AZ1" : "us-east-1a", "AZ2" : "us-east-1b", "AZ3" : "us-east-1b", "AZ4" : "us-east-1d", "AZ5" : "us-east-1e"},
            "us-west-1"     : {"AZ1" : "us-west-1a", "AZ2" : "us-west-1b", "AZ3" : "us-west-1c"},
            "us-west-2"     : {"AZ1" : "us-west-2a", "AZ2" : "us-west-2b"},
            "eu-west-1"     : {"AZ1" : "eu-west-1a", "AZ2" : "eu-west-1b", "AZ3" : "eu-west-1c"},
            "ap-southeast-1": {"AZ1" : "ap-southeast-1a", "AZ2" : "ap-southeast-1b"},
            "ap-southeast-2": {"AZ1" : "ap-southeast-2a", "AZ2" : "ap-southeast-2b"},
            "ap-northeast-1": {"AZ1" : "ap-northeast-1a", "AZ2" : "ap-northeast-1b"},
            "sa-east-1"     : {"AZ1" : "sa-east-1a", "AZ2" : "sa-east-1b"}
        }
    },

    "Resources" : {

        "MessageServiceSG" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "DAPI-MessageService Security Group",
                "SecurityGroupIngress" : [
                        {
                            "IpProtocol" : "tcp", "FromPort" : "8000", "ToPort" : "8000",
                            "CidrIp" : { "Ref": "FrontEndIpAddress" }
                        },
                        {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref": "SshIpAddress" } }
                ]
            }
        },

        "DataServiceSG" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "DependsOn": [
                "MessageServiceSG"
            ],
            "Properties" : {
                "GroupDescription" : "DAPI-DataService Security Group",
                "SecurityGroupIngress" : [
                        {
                            "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80",
                            "SourceSecurityGroupId" : { "Fn::GetAtt" : [ "MessageServiceSG", "GroupId" ] }
                        },
                        {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref": "SshIpAddress" } }
                ]
            }
        },

        "MongoSG" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "DependsOn": [
                "DataServiceSG",
                "MessageServiceSG"
            ],
            "Properties" : {
                "GroupDescription" : "DAPI-MongoDB Security Group",
                "SecurityGroupIngress" : [
                        {
                            "IpProtocol" : "tcp", "FromPort" : "27017", "ToPort" : "27017",
                            "SourceSecurityGroupId" : { "Fn::GetAtt" : [ "MessageServiceSG", "GroupId" ] }
                        },
                        {
                            "IpProtocol" : "tcp", "FromPort" : "27017", "ToPort" : "27017",
                            "SourceSecurityGroupId" : { "Fn::GetAtt" : [ "DataServiceSG", "GroupId" ] }
                        },
                        {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref": "SshIpAddress" } }
                ]
            }
        },

        "MongoSecurityGroupIngress" : {
            "Type" : "AWS::EC2::SecurityGroupIngress",
            "Properties" : {
                "GroupName" : { "Ref" : "MongoSG" },
                "IpProtocol" : "tcp", "FromPort" : "27017", "ToPort" : "27017", "SourceSecurityGroupName" : { "Ref" : "MongoSG" }
            }
        },

        "MongoStatusIngress" : {
            "Type" : "AWS::EC2::SecurityGroupIngress",
            "Properties" : {
                "GroupName" : { "Ref" : "MongoSG" },
                "IpProtocol" : "tcp", "FromPort" : "28017", "ToPort" : "28017", "SourceSecurityGroupName" : { "Ref" : "MongoSG" }
            }
        },

        "MongoStack" : {
            "Type" : "AWS::CloudFormation::Stack",
            "Properties" : {
                "TemplateURL": { "Fn::Join": ["", ["http://" , { "Ref" : "DAPITemplates" }, ".s3.amazonaws.com/MongoStack.cftemplate"]]},
                "Parameters" : {
                    "KeyName"             : { "Ref" : "KeyName" },
                    "InstanceType"        : { "Ref" : "MongoInstanceType" },
                    "ClusterName"         : { "Fn::Join": ["", [{"Ref" : "ClusterName" },"Mongo", { "Ref" : "ReplicaSetName" } ]] },
                    "VolumeSize"          : { "Ref" : "VolumeSize" },
                    "VolumeType"          : { "Ref" : "VolumeType" },
                    "IopsPerVolume"       : { "Ref" : "IopsPerVolume" },
                    "ReplicaSetName"      : { "Ref" : "ReplicaSetName" },
                    "SecurityGroupId"     : { "Fn::GetAtt" : [ "MongoSG", "GroupId" ] },
                    "DAPITemplates"       : { "Ref" : "DAPITemplates" }
                }
            }
        },

        "MessageServiceStack" : {
            "Type" : "AWS::CloudFormation::Stack",
            "DependsOn" : [
                "MongoStack"
            ],
            "Properties" : {
                "TemplateURL": { "Fn::Join": ["", ["http://" , { "Ref" : "DAPITemplates" }, ".s3.amazonaws.com/MessageServiceStack.cftemplate"]]},
                "Parameters" : {
                    "KeyName"                    : { "Ref" : "KeyName" },
                    "ClusterName"                : { "Fn::Join": ["", [{"Ref" : "ClusterName" },"MessageService"]]},
                    "InstanceType"               : { "Ref" : "NodeInstanceType" },
                    "SecurityGroupId"            : { "Fn::GetAtt" : [ "MessageServiceSG", "GroupId" ] },
                    "NodeJSVersion"              : { "Ref" : "NodeJSVersion" },
                    "DAPIUser"                   : { "Ref" : "DAPIUser" },
                    "GitHubSshPublicKey"         : { "Ref" : "GitHubSshPublicKey" },
                    "GitHubSshPrivateKey"        : { "Ref" : "GitHubSshPrivateKey" },
                    "DAPITemplates"              : { "Ref" : "DAPITemplates" },
                    "S3BucketName"               : { "Ref" : "S3BucketName" },
                    "MongoDbName"                : { "Ref" : "MongoDbName" },
                    "SnapshotCollection"         : { "Ref" : "SnapshotCollection" },
                    "BinaryMessageCollection"    : { "Ref" : "BinaryMessageCollection" },
                    "MongoHost"                  : { "Fn::GetAtt" : [ "MongoStack", "Outputs.ReplicaSetMemberName1" ] }
                }
            }
        }
    },

    "Outputs" : {
        "ReplicaSetMemberName1" : {
            "Value" : { "Fn::GetAtt" : [ "MongoStack", "Outputs.ReplicaSetMemberName1" ] },
            "Description" : "Public DNS name of the MongoDB Replica Set endpoint (node 1 : PRIMARY)"
        },
        "ReplicaSetMemberName2" : {
            "Value" : { "Fn::GetAtt" : [ "MongoStack", "Outputs.ReplicaSetMemberName2" ] },
            "Description" : "Public DNS name of the MongoDB Replica Set node 2"
        },
        "ReplicaSetMemberName3" : {
            "Value" : { "Fn::GetAtt" : [ "MongoStack", "Outputs.ReplicaSetMemberName3" ] },
            "Description" : "Public DNS name of the MongoDB Replica Set node 3"
        },
        "MessageServiceName1" : {
            "Value" : { "Fn::GetAtt" : [ "MessageServiceStack", "Outputs.MessageService1" ] },
            "Description" : "Public DNS name of the MessageService Node 1"
        },
        "MessageServiceName1" : {
            "Value" : { "Fn::GetAtt" : [ "MessageServiceStack", "Outputs.MessageService2" ] },
            "Description" : "Public DNS name of the MessageService Node 2"
        },
        "CanonicalHostedZoneName" : {
            "Value" : { "Fn::GetAtt" : [ "MessageServiceStack", "Outputs.CanonicalHostedZoneName" ] },
            "Description" : "The name of the Amazon Route 53 hosted zone that is associated with the load balancer."
        },
        "CanonicalHostedZoneNameID" : {
            "Value" : { "Fn::GetAtt" : [ "MessageServiceStack", "Outputs.CanonicalHostedZoneNameID" ] },
            "Description" : "The ID of the Amazon Route 53 hosted zone that is associated with the load balancer."
        },
        "LoadBalancerDNSName" : {
            "Value" : { "Fn::GetAtt" : [ "MessageServiceStack", "Outputs.LoadBalancerDNSName" ] },
            "Description" : "The DNS name for the load balancer."
        }
    }
}
